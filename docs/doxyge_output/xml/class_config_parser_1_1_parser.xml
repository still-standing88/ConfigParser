<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="class_config_parser_1_1_parser" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ConfigParser::Parser</compoundname>
    <derivedcompoundref refid="class_config_parser_1_1_cfg_parser" prot="public" virt="non-virtual">ConfigParser::CfgParser</derivedcompoundref>
    <derivedcompoundref refid="class_config_parser_1_1_ini_parser" prot="public" virt="non-virtual">ConfigParser::IniParser</derivedcompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_config_parser_1_1_parser_1af024a302dc948b122aabec9a0d9f18ad" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_config_parser_1a0bd4459ac6751e6ce1f169390d4dc9d0" kindref="member">ConfigError</ref></type>
        <definition>ConfigError ConfigParser::Parser::errorCode</definition>
        <argsstring></argsstring>
        <name>errorCode</name>
        <qualifiedname>ConfigParser::Parser::errorCode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="378" column="13" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_config_parser_1_1_parser_1aed2dd1ff1de6b779e1b0923c67078e90" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ConfigParser::Parser::path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <qualifiedname>ConfigParser::Parser::path</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="379" column="13" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_config_parser_1_1_parser_1acccb1f040cf317c400a6690b26844773" prot="protected" static="no" mutable="no">
        <type>std::fstream</type>
        <definition>std::fstream ConfigParser::Parser::file</definition>
        <argsstring></argsstring>
        <name>file</name>
        <qualifiedname>ConfigParser::Parser::file</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="380" column="14" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_config_parser_1_1_parser_1ae230cdad3d47cf86c7a2ab6645ae33e0" prot="protected" static="no" mutable="no">
        <type>LineVector</type>
        <definition>LineVector ConfigParser::Parser::lines</definition>
        <argsstring></argsstring>
        <name>lines</name>
        <qualifiedname>ConfigParser::Parser::lines</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="381" column="12" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="381" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a11a1c2e1c745989f0485998190029ba6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ConfigParser::Parser::Parser</definition>
        <argsstring>(std::string _path=&quot;&quot;)</argsstring>
        <name>Parser</name>
        <qualifiedname>ConfigParser::Parser::Parser</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>_path</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="262" column="1" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1abe4f9bce16400115baff6c213c24613c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ConfigParser::Parser::~Parser</definition>
        <argsstring>()</argsstring>
        <name>~Parser</name>
        <qualifiedname>ConfigParser::Parser::~Parser</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="266" column="9" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a61ad72183580e8490ccc8756b0314070" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; ConfigParser::Parser::getPath</definition>
        <argsstring>() const</argsstring>
        <name>getPath</name>
        <qualifiedname>ConfigParser::Parser::getPath</qualifiedname>
        <briefdescription>
<para>Get the current path to the config file. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>REturns a constant std string for file path. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="272" column="19" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="272" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a7fdc998a16b5bbb58be3ab6c2409213a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespace_config_parser_1a0bd4459ac6751e6ce1f169390d4dc9d0" kindref="member">ConfigError</ref></type>
        <definition>const ConfigError ConfigParser::Parser::getError</definition>
        <argsstring>() const</argsstring>
        <name>getError</name>
        <qualifiedname>ConfigParser::Parser::getError</qualifiedname>
        <briefdescription>
<para>Retrieves currently imitted error code. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns a Config error enum state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="278" column="19" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="278" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1aa46a1714d63cfa91970807e08aaef767" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ConfigParser::Parser::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <qualifiedname>ConfigParser::Parser::flush</qualifiedname>
        <briefdescription>
<para>Clears current eror state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="283" column="6" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a7ae8beff71dd4d207cc0d74aacc95891" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ConfigParser::Parser::load</definition>
        <argsstring>(std::string _path)</argsstring>
        <name>load</name>
        <qualifiedname>ConfigParser::Parser::load</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>_path</declname>
        </param>
        <briefdescription>
<para>Loads a config file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>String</parametername>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>path. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="289" column="14" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="289" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a5d7fc5f987fa169a74a785ae80e6dfc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ConfigParser::Parser::reload</definition>
        <argsstring>()</argsstring>
        <name>reload</name>
        <qualifiedname>ConfigParser::Parser::reload</qualifiedname>
        <briefdescription>
<para>Reloads an opened config file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="300" column="14" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1aeb04aaa7c6792d4da9f90dccc9a2fbe0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ConfigParser::Parser::save</definition>
        <argsstring>(std::string _path=&quot;&quot;)</argsstring>
        <name>save</name>
        <qualifiedname>ConfigParser::Parser::save</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>_path</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Writes config data to the file path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>String</parametername>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>file, where file must be saved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="309" column="14" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="309" bodyend="314"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_config_parser_1_1_parser_1acc52243e00b2d4a799354670c5e18b10" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ConfigParser::Parser::fileExists</definition>
        <argsstring>(const std::string &amp;filePath)</argsstring>
        <name>fileExists</name>
        <qualifiedname>ConfigParser::Parser::fileExists</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="317" column="20" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="317" bodyend="317"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a15166678b1380d62f5c1b1c75a352f1f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConfigParser::Parser::isComment</definition>
        <argsstring>(std::string str)</argsstring>
        <name>isComment</name>
        <qualifiedname>ConfigParser::Parser::isComment</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="318" column="13" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="318" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1af580a65aa8e4ce57340c4fd40c5ce94f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConfigParser::Parser::isEmptyLine</definition>
        <argsstring>(std::string str)</argsstring>
        <name>isEmptyLine</name>
        <qualifiedname>ConfigParser::Parser::isEmptyLine</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="319" column="13" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="319" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1acfbfe1475036c0fe9b361165fc147b71" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConfigParser::Parser::isValue</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>isValue</name>
        <qualifiedname>ConfigParser::Parser::isValue</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="320" column="13" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="320" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1aa33d03d194ccfca0272124acf52b22ed" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConfigParser::Parser::isSection</definition>
        <argsstring>(std::string str)</argsstring>
        <name>isSection</name>
        <qualifiedname>ConfigParser::Parser::isSection</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Check if string is a section name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="325" column="13" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a2503eb9bf3dc58d433bc7c3b4bf61278" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StringVector</type>
        <definition>StringVector ConfigParser::Parser::extractValue</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>extractValue</name>
        <qualifiedname>ConfigParser::Parser::extractValue</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="330" column="14" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="330" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1ae8e0642de541ced7d15d75bdd0513bc4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ConfigParser::Parser::extractSection</definition>
        <argsstring>(std::string str)</argsstring>
        <name>extractSection</name>
        <qualifiedname>ConfigParser::Parser::extractSection</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Extracts a section name from string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="334" column="13" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="334" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a526fd528a8473067730ef435f870c239" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ConfigParser::Parser::appendLine</definition>
        <argsstring>(ConfigType type, std::string content)</argsstring>
        <name>appendLine</name>
        <qualifiedname>ConfigParser::Parser::appendLine</qualifiedname>
        <param>
          <type><ref refid="namespace_config_parser_1ac114dd608458b8594e1463f4f34890c5" kindref="member">ConfigType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="341" column="6" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="341" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a14e70fe2845235c3366a13f0f7ca51bd" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ConfigParser::Parser::removeLine</definition>
        <argsstring>(const std::string &amp;handle)</argsstring>
        <name>removeLine</name>
        <qualifiedname>ConfigParser::Parser::removeLine</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Removes a specified line using it&apos;s content. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="346" column="6" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="346" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a29f864b5eaa097d782fea070f0382f83" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ConfigParser::Parser::readFile</definition>
        <argsstring>()</argsstring>
        <name>readFile</name>
        <qualifiedname>ConfigParser::Parser::readFile</qualifiedname>
        <briefdescription>
<para>helper function to read file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="359" column="14" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="359" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a34faa0375b0101f6c1e69a6473875a79" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ConfigParser::Parser::read</definition>
        <argsstring>()=0</argsstring>
        <name>read</name>
        <qualifiedname>ConfigParser::Parser::read</qualifiedname>
        <reimplementedby refid="class_config_parser_1_1_cfg_parser_1a126b30dbb8bd2231d9dd4de9db35b84b">read</reimplementedby>
        <reimplementedby refid="class_config_parser_1_1_ini_parser_1ab3bae803ae7209613fb8a20c90225a5b">read</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="367" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a0a3a4deebb08a640ac980140ae31cac7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ConfigParser::Parser::write</definition>
        <argsstring>()=0</argsstring>
        <name>write</name>
        <qualifiedname>ConfigParser::Parser::write</qualifiedname>
        <reimplementedby refid="class_config_parser_1_1_cfg_parser_1a703a8344226a190d79ed4029a0a63f8c">write</reimplementedby>
        <reimplementedby refid="class_config_parser_1_1_ini_parser_1a93864c385f03a0230060acc05622ae24">write</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="368" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_parser_1a6efcd493914cfe9f0a6161211640d070" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ConfigParser::Parser::erase</definition>
        <argsstring>()</argsstring>
        <name>erase</name>
        <qualifiedname>ConfigParser::Parser::erase</qualifiedname>
        <reimplementedby refid="class_config_parser_1_1_cfg_parser_1a7235c49dc60ea7f1715bccad76db0539">erase</reimplementedby>
        <reimplementedby refid="class_config_parser_1_1_ini_parser_1a5f3e6f0e3096bddacd9a45c36865ed87">erase</reimplementedby>
        <briefdescription>
<para>Takes cair of clearing lines. (can be overwriten for implementation) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="373" column="14" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="373" bodyend="376"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for existing parsers. Contains methods which must be overwriten to implement functionality. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ConfigParser::CfgParser</label>
        <link refid="class_config_parser_1_1_cfg_parser"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ConfigParser::IniParser</label>
        <link refid="class_config_parser_1_1_ini_parser"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ConfigParser::Parser</label>
        <link refid="class_config_parser_1_1_parser"/>
      </node>
    </inheritancegraph>
    <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="260" column="1" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="260" bodyend="382"/>
    <listofallmembers>
      <member refid="class_config_parser_1_1_parser_1a526fd528a8473067730ef435f870c239" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>appendLine</name></member>
      <member refid="class_config_parser_1_1_parser_1a6efcd493914cfe9f0a6161211640d070" prot="protected" virt="virtual"><scope>ConfigParser::Parser</scope><name>erase</name></member>
      <member refid="class_config_parser_1_1_parser_1af024a302dc948b122aabec9a0d9f18ad" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>errorCode</name></member>
      <member refid="class_config_parser_1_1_parser_1ae8e0642de541ced7d15d75bdd0513bc4" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>extractSection</name></member>
      <member refid="class_config_parser_1_1_parser_1a2503eb9bf3dc58d433bc7c3b4bf61278" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>extractValue</name></member>
      <member refid="class_config_parser_1_1_parser_1acccb1f040cf317c400a6690b26844773" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>file</name></member>
      <member refid="class_config_parser_1_1_parser_1acc52243e00b2d4a799354670c5e18b10" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>fileExists</name></member>
      <member refid="class_config_parser_1_1_parser_1aa46a1714d63cfa91970807e08aaef767" prot="public" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>flush</name></member>
      <member refid="class_config_parser_1_1_parser_1a7fdc998a16b5bbb58be3ab6c2409213a" prot="public" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>getError</name></member>
      <member refid="class_config_parser_1_1_parser_1a61ad72183580e8490ccc8756b0314070" prot="public" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>getPath</name></member>
      <member refid="class_config_parser_1_1_parser_1a15166678b1380d62f5c1b1c75a352f1f" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>isComment</name></member>
      <member refid="class_config_parser_1_1_parser_1af580a65aa8e4ce57340c4fd40c5ce94f" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>isEmptyLine</name></member>
      <member refid="class_config_parser_1_1_parser_1aa33d03d194ccfca0272124acf52b22ed" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>isSection</name></member>
      <member refid="class_config_parser_1_1_parser_1acfbfe1475036c0fe9b361165fc147b71" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>isValue</name></member>
      <member refid="class_config_parser_1_1_parser_1ae230cdad3d47cf86c7a2ab6645ae33e0" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>lines</name></member>
      <member refid="class_config_parser_1_1_parser_1a7ae8beff71dd4d207cc0d74aacc95891" prot="public" virt="virtual"><scope>ConfigParser::Parser</scope><name>load</name></member>
      <member refid="class_config_parser_1_1_parser_1a11a1c2e1c745989f0485998190029ba6" prot="public" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>Parser</name></member>
      <member refid="class_config_parser_1_1_parser_1aed2dd1ff1de6b779e1b0923c67078e90" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>path</name></member>
      <member refid="class_config_parser_1_1_parser_1a34faa0375b0101f6c1e69a6473875a79" prot="protected" virt="pure-virtual"><scope>ConfigParser::Parser</scope><name>read</name></member>
      <member refid="class_config_parser_1_1_parser_1a29f864b5eaa097d782fea070f0382f83" prot="protected" virt="virtual"><scope>ConfigParser::Parser</scope><name>readFile</name></member>
      <member refid="class_config_parser_1_1_parser_1a5d7fc5f987fa169a74a785ae80e6dfc1" prot="public" virt="virtual"><scope>ConfigParser::Parser</scope><name>reload</name></member>
      <member refid="class_config_parser_1_1_parser_1a14e70fe2845235c3366a13f0f7ca51bd" prot="protected" virt="non-virtual"><scope>ConfigParser::Parser</scope><name>removeLine</name></member>
      <member refid="class_config_parser_1_1_parser_1aeb04aaa7c6792d4da9f90dccc9a2fbe0" prot="public" virt="virtual"><scope>ConfigParser::Parser</scope><name>save</name></member>
      <member refid="class_config_parser_1_1_parser_1a0a3a4deebb08a640ac980140ae31cac7" prot="protected" virt="pure-virtual"><scope>ConfigParser::Parser</scope><name>write</name></member>
      <member refid="class_config_parser_1_1_parser_1abe4f9bce16400115baff6c213c24613c" prot="public" virt="virtual"><scope>ConfigParser::Parser</scope><name>~Parser</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
