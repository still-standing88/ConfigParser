<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="namespace_config_parser" kind="namespace" language="C++">
    <compoundname>ConfigParser</compoundname>
    <innerclass refid="class_config_parser_1_1_cfg_parser" prot="public">ConfigParser::CfgParser</innerclass>
    <innerclass refid="struct_config_parser_1_1_config_line" prot="public">ConfigParser::ConfigLine</innerclass>
    <innerclass refid="class_config_parser_1_1_config_section" prot="public">ConfigParser::ConfigSection</innerclass>
    <innerclass refid="class_config_parser_1_1_config_value" prot="public">ConfigParser::ConfigValue</innerclass>
    <innerclass refid="class_config_parser_1_1_ini_parser" prot="public">ConfigParser::IniParser</innerclass>
    <innerclass refid="class_config_parser_1_1_parser" prot="public">ConfigParser::Parser</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_config_parser_1a0bd4459ac6751e6ce1f169390d4dc9d0" prot="public" static="no" strong="yes">
        <type></type>
        <name>ConfigError</name>
        <qualifiedname>ConfigParser::ConfigError</qualifiedname>
        <enumvalue id="namespace_config_parser_1a0bd4459ac6751e6ce1f169390d4dc9d0acd54d99c8efb3c2db794197045f5b83c" prot="public">
          <name>FILE_NOT_FOUND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_config_parser_1a0bd4459ac6751e6ce1f169390d4dc9d0a08715903eca17abcd7ecdb74bc10aa4b" prot="public">
          <name>FILE_OPEN_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_config_parser_1a0bd4459ac6751e6ce1f169390d4dc9d0a99303a4659e8a1a5fe2193a7a5019258" prot="public">
          <name>FILE_READ_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_config_parser_1a0bd4459ac6751e6ce1f169390d4dc9d0ad306b6fdee05fe87455110ddf6501e6c" prot="public">
          <name>NO_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defined error types used for file error checking. </para>
        </briefdescription>
        <detaileddescription>
<para>Enum class  </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="68" column="1" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="68" bodyend="73"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_config_parser_1ac114dd608458b8594e1463f4f34890c5" prot="public" static="no" strong="yes">
        <type></type>
        <name>ConfigType</name>
        <qualifiedname>ConfigParser::ConfigType</qualifiedname>
        <enumvalue id="namespace_config_parser_1ac114dd608458b8594e1463f4f34890c5abab4a59763852166fab7703ee8e47be3" prot="public">
          <name>CONFIG_EMPTY_LINE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_config_parser_1ac114dd608458b8594e1463f4f34890c5a7ced0a0c6c268a7559059ffb72118963" prot="public">
          <name>CONFIG_COMMENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_config_parser_1ac114dd608458b8594e1463f4f34890c5aa7866d06111e8f6c0fc760768455df62" prot="public">
          <name>CONFIG_SECTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_config_parser_1ac114dd608458b8594e1463f4f34890c5a590aedbeb3e8b5985fa31de39d853efb" prot="public">
          <name>CONFIG_VALUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Config data types. </para>
        </briefdescription>
        <detaileddescription>
<para>enum  </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="79" column="1" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="79" bodyend="84"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_config_parser_1abecbdbf6db2e0932c4fbc6a2cdaccf48" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="class_config_parser_1_1_config_section" kindref="compound">ConfigSection</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;std::string, ConfigSection&gt; ConfigParser::SectionMap</definition>
        <argsstring></argsstring>
        <name>SectionMap</name>
        <qualifiedname>ConfigParser::SectionMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="42" column="28" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_config_parser_1a5eab99520dcc3076b7081d77c99000f9" prot="public" static="no">
        <type>std::vector&lt; <ref refid="struct_config_parser_1_1_config_line" kindref="compound">ConfigLine</ref> &gt;</type>
        <definition>typedef std::vector&lt;ConfigLine&gt; ConfigParser::LineVector</definition>
        <argsstring></argsstring>
        <name>LineVector</name>
        <qualifiedname>ConfigParser::LineVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="43" column="21" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_config_parser_1aab2c0a3f2cba3db55970f1fe37055e64" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="class_config_parser_1_1_config_value" kindref="compound">ConfigValue</ref> &gt;</type>
        <definition>typedef std::map&lt;std::string, ConfigValue&gt; ConfigParser::ValueMap</definition>
        <argsstring></argsstring>
        <name>ValueMap</name>
        <qualifiedname>ConfigParser::ValueMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="44" column="18" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_config_parser_1a0329d2e1de4b15ca65690f83f4b8d97b" prot="public" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>typedef std::vector&lt;std::string&gt; ConfigParser::StringVector</definition>
        <argsstring></argsstring>
        <name>StringVector</name>
        <qualifiedname>ConfigParser::StringVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="45" column="21" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_config_parser_1a8b334b0c98f04725442f3634e97669e5" prot="public" static="no">
        <type>typename StringVector::iterator</type>
        <definition>using ConfigParser::KeysIter =  typename StringVector::iterator</definition>
        <argsstring></argsstring>
        <name>KeysIter</name>
        <qualifiedname>ConfigParser::KeysIter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="46" column="1" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_config_parser_1a0d6b6bb585afad6bf1f87989e7dfdd89" prot="public" static="no">
        <type>typename StringVector::const_iterator</type>
        <definition>using ConfigParser::ConstKeysIter =  typename StringVector::const_iterator</definition>
        <argsstring></argsstring>
        <name>ConstKeysIter</name>
        <qualifiedname>ConfigParser::ConstKeysIter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="47" column="1" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_config_parser_1a45fe635beea2fd3a0e5ab7ec7fe3e4a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename element_t</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>static int ConfigParser::find</definition>
        <argsstring>(const std::vector&lt; element_t &gt; &amp;vectorContainer, const element_t &amp;value)</argsstring>
        <name>find</name>
        <qualifiedname>ConfigParser::find</qualifiedname>
        <param>
          <type>const std::vector&lt; element_t &gt; &amp;</type>
          <declname>vectorContainer</declname>
        </param>
        <param>
          <type>const element_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="51" column="19" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespace_config_parser_1a2290df21bb90286bbec986a1f7a44584" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename element_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void ConfigParser::removeElement</definition>
        <argsstring>(std::vector&lt; element_t &gt; &amp;vectorContainer, const element_t &amp;value)</argsstring>
        <name>removeElement</name>
        <qualifiedname>ConfigParser::removeElement</qualifiedname>
        <param>
          <type>std::vector&lt; element_t &gt; &amp;</type>
          <declname>vectorContainer</declname>
        </param>
        <param>
          <type>const element_t &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="57" column="20" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="57" bodyend="62"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="namespace_config_parser" kindref="compound">ConfigParser</ref> namespace. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="37" column="1"/>
  </compounddef>
</doxygen>
