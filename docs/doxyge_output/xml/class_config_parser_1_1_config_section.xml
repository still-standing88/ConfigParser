<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="class_config_parser_1_1_config_section" kind="class" language="C++" prot="public">
    <compoundname>ConfigParser::ConfigSection</compoundname>
    <derivedcompoundref refid="class_config_parser_1_1_ini_parser" prot="public" virt="non-virtual">ConfigParser::IniParser</derivedcompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_config_parser_1_1_config_section_1a8f3f04c2095b50081413160bfce91394" prot="protected" static="no" mutable="no">
        <type>ValueMap</type>
        <definition>ValueMap ConfigParser::ConfigSection::dict</definition>
        <argsstring></argsstring>
        <name>dict</name>
        <qualifiedname>ConfigParser::ConfigSection::dict</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="491" column="10" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_config_parser_1_1_config_section_1a373cb8a96edc3c88cec0cf65c7520a3c" prot="protected" static="no" mutable="no">
        <type>StringVector</type>
        <definition>StringVector ConfigParser::ConfigSection::keys</definition>
        <argsstring></argsstring>
        <name>keys</name>
        <qualifiedname>ConfigParser::ConfigSection::keys</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="492" column="14" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="492" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1a06952817e91cf50d79dd7f527dee8632" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ConfigParser::ConfigSection::ConfigSection</definition>
        <argsstring>()</argsstring>
        <name>ConfigSection</name>
        <qualifiedname>ConfigParser::ConfigSection::ConfigSection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="390" column="1" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="390" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1aa50c3bc1a129b1a9e2b87138a5e79dac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ConfigParser::ConfigSection::~ConfigSection</definition>
        <argsstring>()</argsstring>
        <name>~ConfigSection</name>
        <qualifiedname>ConfigParser::ConfigSection::~ConfigSection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="391" column="1" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="391" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1a919fefbab12dc0f6269565013c757162" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename value_type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ConfigParser::ConfigSection::insert</definition>
        <argsstring>(std::string key, value_type value)</argsstring>
        <name>insert</name>
        <qualifiedname>ConfigParser::ConfigSection::insert</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>value_type</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Inserts a key-value pair if the key doesn&apos;t exist. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to insert. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to associate with the key. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="399" column="6" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="399" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1af9170f244130ca33b98205c429ca74ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_config_parser_1_1_config_value" kindref="compound">ConfigValue</ref></type>
        <definition>virtual ConfigValue ConfigParser::ConfigSection::pop</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>pop</name>
        <qualifiedname>ConfigParser::ConfigSection::pop</qualifiedname>
        <reimplementedby refid="class_config_parser_1_1_ini_parser_1a88a12dd1f2888758df7783b9a97e5158">pop</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Removes and returns the value associated with the key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to remove. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value associated with the key. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="412" column="21" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="412" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1af1928f1a6599955c63c03f1d409a736a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ConfigParser::ConfigSection::remove</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>remove</name>
        <qualifiedname>ConfigParser::ConfigSection::remove</qualifiedname>
        <reimplementedby refid="class_config_parser_1_1_ini_parser_1a45d070485a68eb1820e3a0b1322a2a31">remove</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Removes a key-value pair. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to remove. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="424" column="14" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="424" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1a4757726513ed21b0a24ab902ea452982" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename value_type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ConfigParser::ConfigSection::update</definition>
        <argsstring>(const std::string &amp;key, value_type value)</argsstring>
        <name>update</name>
        <qualifiedname>ConfigParser::ConfigSection::update</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>value_type</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Updates the value of an existing key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to update. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="437" column="6" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="437" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1a71c19acc57f727ad84f0ac3f62dca018" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConfigParser::ConfigSection::exists</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>exists</name>
        <qualifiedname>ConfigParser::ConfigSection::exists</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Checks if a key exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the key exists, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="448" column="6" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="448" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1abfba8e21089adbe927ce7352e74cc935" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ConfigParser::ConfigSection::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>ConfigParser::ConfigSection::clear</qualifiedname>
        <reimplementedby refid="class_config_parser_1_1_ini_parser_1a51a9b91018451cc51ccccd23ebe17d63">clear</reimplementedby>
        <briefdescription>
<para>Clears all key-value pairs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="453" column="14" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="453" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1acc448faa06b9e5b1ae82642f78335b9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_config_parser_1_1_config_value" kindref="compound">ConfigValue</ref> &amp;</type>
        <definition>ConfigValue &amp; ConfigParser::ConfigSection::get</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>get</name>
        <qualifiedname>ConfigParser::ConfigSection::get</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Gets the value associated with a key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to look up. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value associated with the key. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::out_of_range</parametername>
</parameternamelist>
<parameterdescription>
<para>if the key doesn&apos;t exist. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="464" column="13" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="464" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1a5c9f8795bc09b8a3c51c842527e6889d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_config_parser_1_1_config_value" kindref="compound">ConfigValue</ref> &amp;</type>
        <definition>virtual ConfigValue &amp; ConfigParser::ConfigSection::operator[]</definition>
        <argsstring>(std::string key)</argsstring>
        <name>operator[]</name>
        <qualifiedname>ConfigParser::ConfigSection::operator[]</qualifiedname>
        <reimplementedby refid="class_config_parser_1_1_ini_parser_1a66cf3b50fdd88922e570f5af84ad29d0">operator[]</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="473" column="21" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="473" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1a824678f5a3a530e56c389a08be62ffe8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KeysIter</type>
        <definition>KeysIter ConfigParser::ConfigSection::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>ConfigParser::ConfigSection::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="485" column="10" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="485" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1aa5c4a888dd04e9ef184c81da5b8414e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KeysIter</type>
        <definition>KeysIter ConfigParser::ConfigSection::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>ConfigParser::ConfigSection::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="486" column="10" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="486" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1a910beecc2d140a2aeca7c39a94a343e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ConstKeysIter</type>
        <definition>ConstKeysIter ConfigParser::ConfigSection::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>ConfigParser::ConfigSection::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="487" column="15" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="487" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="class_config_parser_1_1_config_section_1a87c8b4c9030cf913b5f2df0b76241ad9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ConstKeysIter</type>
        <definition>ConstKeysIter ConfigParser::ConfigSection::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>ConfigParser::ConfigSection::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="488" column="15" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="488" bodyend="488"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents a configuration section with key-value pairs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ConfigParser::ConfigSection</label>
        <link refid="class_config_parser_1_1_config_section"/>
      </node>
      <node id="2">
        <label>ConfigParser::IniParser</label>
        <link refid="class_config_parser_1_1_ini_parser"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" line="388" column="1" bodyfile="E:/dev/c++_libs/ConfigParser/src/ConfigParser.hpp" bodystart="388" bodyend="493"/>
    <listofallmembers>
      <member refid="class_config_parser_1_1_config_section_1a824678f5a3a530e56c389a08be62ffe8" prot="public" virt="non-virtual"><scope>ConfigParser::ConfigSection</scope><name>begin</name></member>
      <member refid="class_config_parser_1_1_config_section_1a910beecc2d140a2aeca7c39a94a343e0" prot="public" virt="non-virtual"><scope>ConfigParser::ConfigSection</scope><name>begin</name></member>
      <member refid="class_config_parser_1_1_config_section_1abfba8e21089adbe927ce7352e74cc935" prot="public" virt="virtual"><scope>ConfigParser::ConfigSection</scope><name>clear</name></member>
      <member refid="class_config_parser_1_1_config_section_1a06952817e91cf50d79dd7f527dee8632" prot="public" virt="non-virtual"><scope>ConfigParser::ConfigSection</scope><name>ConfigSection</name></member>
      <member refid="class_config_parser_1_1_config_section_1a8f3f04c2095b50081413160bfce91394" prot="protected" virt="non-virtual"><scope>ConfigParser::ConfigSection</scope><name>dict</name></member>
      <member refid="class_config_parser_1_1_config_section_1aa5c4a888dd04e9ef184c81da5b8414e8" prot="public" virt="non-virtual"><scope>ConfigParser::ConfigSection</scope><name>end</name></member>
      <member refid="class_config_parser_1_1_config_section_1a87c8b4c9030cf913b5f2df0b76241ad9" prot="public" virt="non-virtual"><scope>ConfigParser::ConfigSection</scope><name>end</name></member>
      <member refid="class_config_parser_1_1_config_section_1a71c19acc57f727ad84f0ac3f62dca018" prot="public" virt="non-virtual"><scope>ConfigParser::ConfigSection</scope><name>exists</name></member>
      <member refid="class_config_parser_1_1_config_section_1acc448faa06b9e5b1ae82642f78335b9e" prot="public" virt="non-virtual"><scope>ConfigParser::ConfigSection</scope><name>get</name></member>
      <member refid="class_config_parser_1_1_config_section_1a919fefbab12dc0f6269565013c757162" prot="public" virt="non-virtual"><scope>ConfigParser::ConfigSection</scope><name>insert</name></member>
      <member refid="class_config_parser_1_1_config_section_1a373cb8a96edc3c88cec0cf65c7520a3c" prot="protected" virt="non-virtual"><scope>ConfigParser::ConfigSection</scope><name>keys</name></member>
      <member refid="class_config_parser_1_1_config_section_1a5c9f8795bc09b8a3c51c842527e6889d" prot="public" virt="virtual"><scope>ConfigParser::ConfigSection</scope><name>operator[]</name></member>
      <member refid="class_config_parser_1_1_config_section_1af9170f244130ca33b98205c429ca74ac" prot="public" virt="virtual"><scope>ConfigParser::ConfigSection</scope><name>pop</name></member>
      <member refid="class_config_parser_1_1_config_section_1af1928f1a6599955c63c03f1d409a736a" prot="public" virt="virtual"><scope>ConfigParser::ConfigSection</scope><name>remove</name></member>
      <member refid="class_config_parser_1_1_config_section_1a4757726513ed21b0a24ab902ea452982" prot="public" virt="non-virtual"><scope>ConfigParser::ConfigSection</scope><name>update</name></member>
      <member refid="class_config_parser_1_1_config_section_1aa50c3bc1a129b1a9e2b87138a5e79dac" prot="public" virt="non-virtual"><scope>ConfigParser::ConfigSection</scope><name>~ConfigSection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
